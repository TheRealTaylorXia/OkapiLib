name: Test

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: okapilib/ubuntu-base:18.04
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.6.0
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v1

      - name: Update Submodules
        run: git submodule update --init --recursive
        
      - name: install arm gcc 
        run: |
          ARM_TOOLCHAIN_VERSION=$(curl -s https://developer.arm.com/downloads/-/arm-gnu-toolchain-downloads | grep -Po '<h4>Version \K.+(?=</h4>)')
          curl -Lo gcc-arm-none-eabi.tar.xz "https://developer.arm.com/-/media/Files/downloads/gnu/${ARM_TOOLCHAIN_VERSION}/binrel/arm-gnu-toolchain-${ARM_TOOLCHAIN_VERSION}-x86_64-arm-none-eabi.tar.xz"
          sudo mkdir /opt/gcc-arm-none-eabi
          sudo tar xf gcc-arm-none-eabi.tar.xz --strip-components=1 -C /opt/gcc-arm-none-eabi
          echo 'export PATH=$PATH:/opt/gcc-arm-none-eabi/bin' | sudo tee -a /etc/profile.d/gcc-arm-none-eabi.sh
          source /etc/profile
          arm-none-eabi-g++ --version
          
      - name: Make
        run: make

      - name: Make Template
        run: |
          make template
          mkdir template
          cp okapilib@*.zip template/

      - name: Verify Template
        run: |
          prosv5 c f okapilib@*.zip
          prosv5 c n verify-template

      - name: Archive production artifacts
        uses: actions/upload-artifact@v1
        with:
          name: template
          path: template

      - name: Build and Test
        env:
          CC: gcc-12
          CXX: g++-12
        run: |
          mkdir -p cmake-build-debug && cd cmake-build-debug
          cmake -DCMAKE_BUILD_TYPE=Debug -G "CodeBlocks - Unix Makefiles" ..
          cmake --build . --target OkapiLibV5 -- -j 2

      - name: Test
        working-directory: cmake-build-debug
        run: ./OkapiLibV5

      - name: Valgrind
        working-directory: cmake-build-debug
        run: valgrind --tool=memcheck --leak-check=full --leak-resolution=med --show-leak-kinds=all --undef-value-errors=yes --track-origins=yes  --error-exitcode=1 --show-reachable=no ./OkapiLibV5

      - name: Collect Coverage
        run: |
          lcov --directory . --capture --output-file coverage.info
          lcov --remove coverage.info '/usr/*' --output-file coverage.info
          lcov --list coverage.info

      - name: Upload Coverage
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true

      - name: Build Docs
        run: ./run_doxygen.sh
